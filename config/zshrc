################################################################################
# Path
typeset -U path
path=(~/.bin $path[@])

[ -d ~/.bin/nosync ] && path=(~/.bin/nosync $path[@])
[ -d ~/.local/bin ] && path=(~/.local/bin $path[@])

################################################################################
# flatpak
[ -f /var/lib/flatpak/exports/bin/org.gimp.GIMP ] && alias gimp='org.gimp.GIMP'
[ -f /var/lib/flatpak/exports/bin/com.valvesoftware.Steam ] && alias steam='com.valvesoftware.Steam'

################################################################################
# News
[ -f ~/.bin/news ] && ~/.bin/news

################################################################################
# Node
[ -d /mnt/btrfs/npm ]     && export npm_config_prefix=/mnt/btrfs/npm
[ -d /mnt/btrfs/npm/bin ] && path=(/mnt/btrfs/npm/bin $path[@])

################################################################################
# ZSH Opts
export HISTFILE=~/.zsh_history
export HISTSIZE=100000
export SAVEHIST=50000

setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_SPACE
setopt HIST_IGNORE_DUPS
# setopt correct

DIRSTACKSIZE=8
setopt autopushd pushdminus pushdsilent pushdtohome

################################################################################
# Set xterm title
case $TERM in
    xterm*)
        precmd () {
            print -Pn "\e]0;%~\a"
        }
    ;;
esac

################################################################################
# Env
export SYSTEMD_LESS="FRSMK"
export EDITOR="nano"
export WINEDLLOVERRIDES="winemenubuilder.exe=d"
export LESS="R"
export CHROOT=/mnt/btrfs/archbuild
export GCC_COLORS=always

################################################################################
# Set dircolors
eval $(dircolors -b)

################################################################################
# Completion
autoload -U compinit && compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' rehash true

# case insensitive search
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# blacklist
zstyle ':completion:*' ignored-patterns 'animate'

# custom completions
compdef '_files -g "*.tar *.tar.* *.tgz *.zip *.rar *.7z"' t
compdef '_files -g "*.tar *.tar.* *.tgz *.bz2 *.gz *.xz *.lz4 *.lzo *.zst *.zip *.rar *.7z"' x
compdef '_files -g "*.zip *.ugoira *.mkv"' ug
compdef '_files -g "*.png"' to-webp

################################################################################
# Key binds
bindkey "\e[1~" beginning-of-line
bindkey "\e[4~" end-of-line
bindkey "\e[5~" beginning-of-history
bindkey "\e[6~" end-of-history
bindkey "\e[7~" beginning-of-line
bindkey "\e[3~" delete-char
bindkey "\e[2~" quoted-insert
bindkey "\e[5C" forward-word
bindkey "\e[5D" backward-word
bindkey "\e\e[C" forward-word
bindkey "\e\e[D" backward-word
bindkey "\e[1;5C" forward-word
bindkey "\e[1;5D" backward-word
bindkey "\e[8~" end-of-line
bindkey "\eOH" beginning-of-line
bindkey "\eOF" end-of-line
bindkey "\e[H" beginning-of-line
bindkey "\e[F" end-of-line

################################################################################
# Extensions

# extensions rely on git
if (( $+commands[git] )); then
    # Download Znap, if it's not there yet.
    [[ -r ~/.zshplugins/znap/znap.zsh ]] ||
        git clone --depth 1 -- https://github.com/marlonrichert/zsh-snap.git ~/.zshplugins/znap
    source ~/.zshplugins/znap/znap.zsh  # Start Znap

    znap source zsh-users/zsh-syntax-highlighting
    znap source zsh-users/zsh-autosuggestions
    znap source zsh-users/zsh-history-substring-search

    bindkey '^[[A' history-substring-search-up
    bindkey '^[[B' history-substring-search-down
fi

[ -f /usr/share/doc/pkgfile/command-not-found.zsh ] && source /usr/share/doc/pkgfile/command-not-found.zsh

################################################################################
# Prompt

if (( $+commands[starship] )); then
    export STARSHIP_CONFIG=~/.bin/config/starship.toml
    eval "$(starship init zsh)"
#elif (( $+commands[git] )); then
#    znap source romkatv/powerlevel10k
#    [ -f ~/.bin/config/p10k.zsh ] && source ~/.bin/config/p10k.zsh
else
    source ~/.bin/config/ps1.zsh
fi

################################################################################
# SSH Agent
if [ -f /usr/bin/ssh-agent ]; then
    if ! pgrep -U ${USER} ssh-agent > /dev/null; then
        [ -S /tmp/ssh-agent-${USER}.socket ] && rm /tmp/ssh-agent-${USER}.socket
        ssh-agent -a /tmp/ssh-agent-${USER}.socket > /dev/null
    fi
    [ -S /tmp/ssh-agent-${USER}.socket ] && export SSH_AUTH_SOCK=/tmp/ssh-agent-${USER}.socket
    [ -S "$XDG_RUNTIME_DIR/ssh-agent.socket" ] && export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
fi


################################################################################
# Temp VENV
venv_create () {
    VENVDIR=$(mktemp -p /tmp -d venv-XXXXX)
    python3 -m venv "$VENVDIR"
    source "$VENVDIR"/bin/activate
    python3 -m pip install --upgrade pip wheel
}

venv_destroy () {
    if [ ! -z "$VENVDIR" ]; then
        deactivate
        rm -rf "$VENVDIR"
        unset VENVDIR
    fi
}

alias venvme='venv_create'
trap venv_destroy EXIT

################################################################################
# Aliases
alias ..='cd ..'

alias sudo='sudo '

if [ -f /usr/bin/lsd ]; then
    ICON="never"
#   [ $TERM = "xterm-256color" ] && ICON="never"
    alias ls='lsd --icon=$ICON'
    alias la='lsd --icon=$ICON -a'
    alias ll='lsd --icon=$ICON -l'
    alias lla='lsd --icon=$ICON -la'
else
    alias ls='ls -v --color=auto '
    alias la='ls -A'
    alias ll='ls -lh'
    alias lla='ls -lAh'
fi

alias grep='grep --colour=auto'
alias grepa='grep --color=auto -r'
alias grepia='grep --color=auto -r -i'

alias diff='diff --color=auto'

alias rm='rm -I'
alias rr='rm -Ir'

alias cp='cp --reflink=auto'

alias tmux='tmux a || tmux'

alias sstop='sudo systemctl stop'
alias sstart='sudo systemctl start'
alias srestart='sudo systemctl restart'
alias sstatus='sudo systemctl status'
alias senable='sudo systemctl enable'
alias sdisable='sudo systemctl disable'

alias gt='cd ~/Downloads/torrent'
alias gta='cd ~/Downloads/torrent/_anime'
alias gtt='cd ~/Downloads/torrent/_tv'
alias gtm='cd ~/Downloads/torrent/_movie'
alias gm='cd /mnt/zed/media'
alias gma='cd /mnt/zed/media/anime'
alias gmt='cd /mnt/zed/media/tv'
alias gmm='cd /mnt/zed/media/movies'

alias winboot='sudo efibootmgr -n $(efibootmgr | grep Windows | cut -c 5-8) && reboot'

alias zlist='zfs list -t filesystem,snapshot,volume | grep -v storage\@'

alias yt-dlp='yt-dlp --embed-subs --embed-metadata --merge-output-format=mkv'

alias fixkey='ssh-keygen -R $(echo `fc -ln -1` | sed "s|.* ||" | sed "s|.*@||")'

alias gpu='sudo watch "cat /sys/kernel/debug/dri/1/amdgpu_pm_info | grep GFX\ Clocks -A20"'

alias mt='mediatree'
alias at='animetree'
alias ap='animeplay'

alias chroot-update='sudo arch-nspawn $CHROOT/root pacman -Syu'
alias chroot-build='makechrootpkg -c -r $CHROOT'

alias ip='ip -color=auto'

alias a2c='aria2c -x5 -s5'

alias sssh='ssh -o HostkeyAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -oKexAlgorithms=+diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1'
alias sscp='scp -o HostkeyAlgorithms=+ssh-rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -oKexAlgorithms=+diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1'

alias mounts='mount | grep -v "/sys" | grep -v "/dev" | grep -v "/proc" | column -t | sort -k 2 | cut -c1-$(tput cols)'

alias ports='sudo lsof -i -n -P | grep LISTEN | grep -v "127\.0\.0"'

alias gd='gallery-dl'

# Package manager for Arch
if [ -f /usr/bin/paru ]; then
    alias yu='paru -Syu'
    alias yi='paru -S'
    alias yr='paru -Rs'
elif [ -f /usr/bin/yay ]; then
    alias yu='yay -Syu'
    alias yi='yay -S'
    alias yr='yay -Rs'
elif [ -f /usr/bin/pacman ]; then
    alias yu='pacman -Syu'
    alias yi='pacman -S'
    alias yr='pacman -Rs'
elif [ -f /usr/bin/apt ]; then
# Package manager for Ubuntu/Debian
    alias yu='sudo apt update && sudo apt upgrade'
    alias yi='sudo apt install'
    alias yr='sudo apt remove'
elif [ -f /sbin/apk ]; then
# Package manager for alpine
    alias yu='sudo apk update && sudo apk upgrade'
    alias yi='sudo apk add'
    alias yr='sudo apk del'
elif [ -f /usr/bin/dnf ]; then
    alias yu='sudo dnf upgrade'
    alias yi='sudo dnf install'
    alias yr='sudo apk remove'
elif [ -f /usr/bin/emerge ]; then
    alias yu='sudo emerge --sync && sudo emerge -uDNav world'
    alias yi='sudo emerge -av'
    alias yr='sudo emerge -av --depclean'
elif [ -f /usr/bin/zypper ]; then
    alias yu='sudo zypper up'
    alias yi='sudo zypper in'
    alias yr='sudo zypper rm -u'
fi

# gimp shortcut
if [ ! -f /usr/bin/gimp ] && [ -f /usr/bin/gimp-2.99 ]; then
    alias gimp='gimp-2.99'
fi

[ -f /usr/bin/fortune ] && fortune -a -s

#zpool status -x

# Something in this throws an error code and I haven't been bothered to tack it down yet
true
