################################################################################
# Path
typeset -U path
path=(~/.bin $path[@])

[ -d ~/.local/bin ] && path=(~/.local/bin $path[@])

################################################################################
# Node
[ -d /mnt/btrfs/npm ]     && export npm_config_prefix=/mnt/btrfs/npm
[ -d /mnt/btrfs/npm/bin ] && path=(/mnt/btrfs/npm/bin $path[@])

################################################################################
# ZSH Opts
export HISTFILE=~/.zsh_history
export HISTSIZE=4000
export SAVEHIST=2000

setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_SPACE
setopt HIST_IGNORE_DUPS
# setopt correct

################################################################################
# Set xterm title
case $TERM in
    xterm*)
        precmd () {
            print -Pn "\e]0;%~\a"
        }
    ;;
esac

################################################################################
# Env
export SYSTEMD_LESS="FRSMK"
export EDITOR="nano"
export WINEDLLOVERRIDES="winemenubuilder.exe=d"
export LESS="R"

################################################################################
# Set dircolors
eval $(dircolors)

################################################################################
# Completion
autoload -U compinit && compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' rehash true

# case insensitive search
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

# compdef '_files -g "*.nzb"' nza nzb_sorter
compdef '_files -g "*.tar *.tar.* *.tgz *.zip *.rar *.7z"' t
compdef '_files -g "*.tar *.tar.* *.tgz *.bz2 *.gz *.xz *.lz4 *.lzo *.zip *.rar *.7z"' x
compdef '_files -g "*.par2"' par2verify par2repair

################################################################################
# Prompt

function no_powerline {
    source ~/.bin/config/ps1.zsh
}

# load powerline
[ -f /usr/bin/powerline-daemon ] && (pgrep powerline-daemo > /dev/null || powerline-daemon -q)

if [ -f /usr/share/powerline/bindings/zsh/powerline.zsh ]; then
    source /usr/share/powerline/bindings/zsh/powerline.zsh
else
    # can't find powerline script
    no_powerline
fi

################################################################################
# Prompt

################################################################################
# Key binds
bindkey "\e[1~" beginning-of-line
bindkey "\e[4~" end-of-line
bindkey "\e[5~" beginning-of-history
bindkey "\e[6~" end-of-history
bindkey "\e[7~" beginning-of-line
bindkey "\e[3~" delete-char
bindkey "\e[2~" quoted-insert
bindkey "\e[5C" forward-word
bindkey "\e[5D" backward-word
bindkey "\e\e[C" forward-word
bindkey "\e\e[D" backward-word
bindkey "\e[1;5C" forward-word
bindkey "\e[1;5D" backward-word
bindkey "\e[8~" end-of-line
bindkey "\eOH" beginning-of-line
bindkey "\eOF" end-of-line
bindkey "\e[H" beginning-of-line
bindkey "\e[F" end-of-line

################################################################################
# Extensions
for ext in  '/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh' \
            '/usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh' \
            '/usr/share/doc/pkgfile/command-not-found.zsh'; do
    [ -f $ext ] && source $ext
done

if [ -f /usr/share/zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh ]; then
    source /usr/share/zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh

    # bind UP and DOWN arrow keys
    bindkey "^[[A" history-substring-search-up
    bindkey "^[[B" history-substring-search-down
fi
################################################################################
# SSH Agent
if ! pgrep -U ${USER} ssh-agent > /dev/null; then
    [ -S /tmp/ssh-agent-${USER}.socket ] && rm /tmp/ssh-agent-${USER}.socket
    ssh-agent -a /tmp/ssh-agent-${USER}.socket > /dev/null
fi

export SSH_AUTH_SOCK=/tmp/ssh-agent-${USER}.socket

################################################################################
# Aliases
alias ..='cd ..'

alias sudo='sudo '

if [ -f /usr/bin/lsd ]; then
    ICON="never"
#   [ $TERM = "xterm-256color" ] && ICON="never"
    alias ls='lsd --icon=$ICON'
    alias la='lsd --icon=$ICON -a'
    alias ll='lsd --icon=$ICON -l'
    alias lla='lsd --icon=$ICON -la'
else
    alias ls='ls -v --color=auto '
    alias la='ls -A'
    alias ll='ls -lh'
    alias lla='ls -lAh'
fi

alias grep='grep --colour=auto'
alias grepa='grep --color=auto -r'
alias grepia='grep --color=auto -r -i'

alias rm='rm -I'
alias rr='rm -Ir'

alias cp='cp --reflink=auto'

alias tmux='tmux a || tmux'

alias sstop='sudo systemctl stop'
alias sstart='sudo systemctl start'
alias srestart='sudo systemctl restart'
alias sstatus='sudo systemctl status'
alias senable='sudo systemctl enable'
alias sdisable='sudo systemctl disable'

alias gm='cd /mnt/zed/media'
alias gma='cd /mnt/zed/media/anime'

alias winboot='sudo bootctl set-oneshot auto-windows && reboot'

alias zlist='zfs list -t filesystem,snapshot,volume | grep -v storage\@'

alias youtube-dl='youtube-dl --merge-output-format=mkv'

alias fixkey='ssh-keygen -R $(echo `fc -ln -1` | sed "s|.* ||" | sed "s|.*@||")'

# Package manager for Arch
if [ -f /usr/bin/yay ]; then
    alias yu='yay -Syu'
    alias yi='yay -S'
    alias yr='yay -Rs'
elif [ -f /usr/bin/pacman ]; then
    alias yu='pacman -Syu'
    alias yi='pacman -S'
    alias yr='pacman -Rs'
elif [ -f /usr/bin/apt ]; then
# Package manager for Ubuntu/Debian
    alias yu='sudo apt-get update && sudo apt-get upgrade'
    alias yi='sudo apt-get install'
    alias yr='sudo apt-get remove'
fi

[ -f /usr/bin/fortune ] && fortune -a -s

# blur for yakuake
if [[ $(ps --no-header -p $PPID -o comm) =~ '^yakuake$' ]]; then
    for wid in $(xdotool search --pid $PPID); do
        xprop -f _KDE_NET_WM_BLUR_BEHIND_REGION 32c -set _KDE_NET_WM_BLUR_BEHIND_REGION 0 -id "$wid"; done
fi
